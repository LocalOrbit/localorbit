<%= render "shared/errors", { resource: order } %>

<%= form_for order, url: admin_order_path(order.id), as: :order, method: :put do |f| %>
<%  user_order_context = UserOrderContext.build(user:current_user, order:order)
      credit_sign = '-'
%>
<div class="order-info">
  <hr/>
  <div style="display: inline-block; width: 100%">
    <input type="hidden" name="commit" />
    <div style="float: left">
      <h1>Order info for <%= order.purchase_order? ? "Purchase Order " : "" %><%= order.order_number %></h1>
      <div class="order-info-date">Placed On: <strong><%= order.placed_at.strftime "%m/%d/%Y at %l:%M%p" %></strong></div>
    </div>
    <div class="button-bar" style="float: right">
      <ul>
        <% if policy(:merge_order).index? && current_market.is_buysell_market? && order.delivery_status_for_user(current_user) != 'canceled' %>
        <li>
          <button id="merge_button" name="Merge Order">Merge Order</button>
        </li>
        <% end %>
        <% if policy(:dup_order).index? && current_market.is_buysell_market? && order.delivery_status_for_user(current_user) != 'canceled' %>
        <li>
          <button id="duplicate_button" name="Duplicate Order">Duplicate Order</button>
        </li>
        <% end %>
        <% if current_market.is_consignment_market? && order.purchase_order? && order.delivery_status == "delivered" %>
        <li>
          <button id="generate_receipt_button" name="Generate Receipt">Generate Receipt</button>
        </li>
        <% end %>
        <% if current_market.is_consignment_market? && order.sales_order? && order.delivery_status == 'pending' %>
        <li>
          <button id="generate_picklist_button" name="Generate Picklist">Generate Pick List</button>
        </li>
        <% end %>
        <% if current_market.is_consignment_market? && order.sales_order? %>
        <li>
          <button id="generate_invoice_button" name="Generate Invoice">Generate Invoice</button>
        </li>
        <% end %>
        <% if policy(:market_quickbooks).index? && order.order_type == "sales" && order.payment_status == 'unpaid' && order.delivery_status_for_user(current_user) == 'delivered' && order.qb_ref_id.nil? && (current_market.qb_integration_type.nil? || current_market.qb_integration_type == 'invoice') %>
        <li>
          <button id="export_invoice_button" name="Export Invoice">Export Invoice to QB</button>
        </li>
        <% elsif policy(:market_quickbooks).index? && order.order_type == "sales" && order.payment_status == 'unpaid' && order.delivery_status_for_user(current_user) == 'delivered' && order.qb_ref_id.nil? && current_market.qb_integration_type == 'journal entry' %>
                <li>
                  <button id="export_invoice_button" name="Export Invoice">Export JE to QB</button>
                </li>
        <% elsif policy(:market_quickbooks).index? && order.order_type == "purchase" && order.payment_status == 'unpaid' && order.delivery_status_for_user(current_user) == 'delivered' && order.qb_ref_id.nil? && order.sold_through %>
        <li>
          <button id="export_bill_button" name="Export Bill">Export Bill to QB</button>
        </li>
        <% elsif policy(:market_quickbooks).index? && order.payment_status == 'exported' && !order.qb_ref_id.nil? %>
        <li>
          <button id="unclose_order" title="Closed orders have been exported to QBO" name="Unclose Order">Unclose Order</button>
        </li>
        <% end %>
        <% if current_market.is_consignment_market? && order.delivery_status == 'pending' && Inventory::Utils.can_delete_order?(order) %>
            <li>
              <button>
                <%= link_to raw('<i class="fa fa-trash-o">&nbsp;</i>'), [:admin, :order],
                        class: "delete order-delete font-icon", style: 'font-size: 17px; color: #990000; padding: 0px; margin: 0px',
                        data: {method: :delete, confirm: "Are you sure you want to permanently delete order #{order.id}?"},
                        title: "Delete" %>
              </button>
            </li>
        <% end %>
      </ul>
    </div>
    <div id="merge_options" style="float: right; display: none">
      <label>Merge Order Into:</label>
      <input type="text" name="dest_order" />
      <%= f.submit "Merge", class: 'btn btn--small mobile-block' %>
      <button id="merge_cancel_button" class="cancel">Cancel</button>
    </div>
  </div>
  <div class="row">
    <div class="order-buyer">
      <div>Buyer: <strong><%= order.organization.name %></strong></div>

      <h2 class="order-address">Billing Address:</h2>
      <p class="vcard">
        <span class="street-address"><%= order.billing_address %></span><br>
        <span class="locality"><%= order.billing_city %></span>,
        <span class="region"><%= order.billing_state %></span> <span class="postal-code"><%= order.billing_zip %></span><br>
        <%= content_tag :span, order.billing_phone, class: "tel" if order.billing_phone.present? %>
      </p>
      <h2 class="order-address"><%= order.display_delivery_or_pickup.titleize %></h2>
      <div>
        <p class="vcard">
          <%= order.display_delivery_address %><br>
        </p>
        <% if current_market.is_buysell_market? %>
        <p class="delivery-time">
          <%= order.delivery.decorate.human_delivery_date %>
        </p>
        <% if @deliveries && can_change_delivery_on_placed_order?(order) %>
          <div id="delivery-changer">
            <span class="change-delivery">
              <%= link_to "Change Delivery", "#", class: "reset btn" %>
            </span>
            <div class="fields is-hidden">
              <%= f.select :delivery_id, @deliveries.
                          map {|d| d.decorate(context: {current_organization: current_organization}) }.
                          sort_by {|d| d.get_buyer_deliver_on }.map{|d| ["#{d.type} - #{d.buyer_display_date} #{d.buyer_time_range}", d.id] } %>
              <br/><br/>
              <%= f.submit "Change Delivery", class: "btn btn--small" %>
            </div>
          </div>
        <% end %>
        <% else %>
        <p class="delivery-time">
          <%= f.datetime_field :deliver_on, value: order.delivery.deliver_on, class: 'datepicker'  %><br/>
          <%= f.submit "Change Delivery", class: "btn btn--tiny" %>
        </p>
        <% end %>
      </div>
    </div>
    <div style="float: left; margin-right: 50px">
    <% if order.sales_order? %>
      <h2>Financial Summary</h2>
      <table class="order-totals-table">
        <tbody>
          <% if order.credit_amount > 0 || order.display_delivery_fees?(current_user) %>
          <tr>
            <th class="math-symbol"></th>
            <th>Product Total:</th>
            <td><%= number_to_currency order.gross_total %></td>
          </tr>
          <% if order.discount > 0 %>
          <tr>
            <th class="math-symbol">-</th>
            <th>Discount:</th>
            <td><%= number_to_currency order.discount %></td>
          </tr>
          <% end %>
          <% if order.credit_amount > 0 && order.credit.apply_to == "subtotal" %>
          <tr>
            <th class="math-symbol"><%= credit_sign %></th>
            <th>Credit: <% if order.credit_amount > 0 && order.credit.notes %><span class="tooltip tooltip--naked" data-tooltip="Notes: <%= order.credit.notes %>"><i class="fa fa-file-text-o"></i></span><% end %></th>
            <td><%= number_to_currency order.credit_amount %></td>
            <% if order.payment_status == "unpaid" && current_user.admin_or_mm? %>
            <td class="credit-clear"><%= link_to "", "#", class: "font-icon icon-clear" %></td>
            <% end %>
            <%= f.hidden_field :credit_clear, :value=>nil %>
          </tr>
          <% end %>
          <% if order.display_delivery_fees?(current_user) && current_market.is_buysell_market? %>
          <tr>
            <th class="math-symbol">+</th>
            <th><%= order.delivery.delivery_schedule.fee_label %>:</th>
            <td><%= number_to_currency order.delivery_fees %></td>
            <% if ((order.payment_method == "purchase order" && order.payment_status == "unpaid") || order.payment_method == "credit card") && order.delivery_fees > 0 && current_user.admin_or_mm? %>
            <td class="delivery-clear"><%= link_to "", "#", class: "font-icon icon-clear" %></td>
            <% end %>
            <%= f.hidden_field :delivery_clear, :value=>nil %>
          </tr>
          <% else %>
          <tr>
            <th class="math-symbol">+</th>
            <th><%= order.delivery.delivery_schedule.fee_label %>:</th>
            <td>
              <%= f.text_field :delivery_fees, size: 3, value: order.delivery_fees, style: 'width: 50px; text-align: right' %>&nbsp;
              <%= f.button raw("<i class='fa fa-check'>&nbsp;</i>").html_safe, class: "btn btn--primary btn--tiny" %>
            </td>
          </tr>
          <% end %>
          <% if order.credit_amount > 0 && order.credit.apply_to == "total" %>
          <tr>
            <th class="math-symbol"><%= credit_sign %></th>
            <th>Credit: <% if order.credit_amount > 0 && order.credit.notes %><span class="tooltip tooltip--naked" data-tooltip="Notes: <%= order.credit.notes %>"><i class="fa fa-file-text-o"></i></span><% end %></th>
            <td><%= number_to_currency order.credit_amount %></td>
            <% if order.payment_status == "unpaid" && current_user.admin_or_mm? %>
            <td class="credit-clear"><%= link_to "", "#", class: "font-icon icon-clear" %></td>
            <% end %>
            <%= f.hidden_field :credit_clear, :value=>nil %>
          </tr>
          <% end %>
          <% end %>
          <tr>
            <th class="math-symbol total-line">=</th>
            <th class="total-line">Order Total:</th>
            <td class="total-line"><%= number_to_currency order.total_cost %></td>
          </tr>
         </tbody>
      </table>
      <% if FeatureAccess.not_LE_market_manager?(user: current_user, market: current_market) && FeatureAccess.can_edit_order?(user: current_user, order: order) && order.payment_method=="purchase order" && order.payment_status == "unpaid" # is this how it should be for quantities too? %>
          <a href="#creditEdit" class="btn btn--small btn--primary modal-toggle app-edit-credit-modal-button"><%= order.credit_amount > 0 ? "Modify" : "Add" %> Credit</a></td>
      <% end %>
    <% end %>
    </div>
    <div class="order-info-status-section" style="float: left">
      <h2>Payment Status</h2>
      <table class="order-info-status">
        <tbody>
        <% if order.purchase_order? %>
            <tr>
              <th scope="row">Sold Through ?</th>
              <td><%= order.sold_through ? 'Yes&nbsp;<i style="color: #559955" class="fa fa-check"></i>'.html_safe : 'No' %></td>
            </tr>
        <% end %>
        <tr>
          <th scope="row">Payment Method: </th>

          <% if current_market.is_consignment_market? && order.sales_order? && order.undelivered_for_user?(current_user) %>
              <td><%= f.select :payment_method, options_for_select([["Invoice","invoice"], ["Purchase Order", "po"], ["Credit Card", "credit"], ["Cash", "cash"], ["Check", "check"]], @order.payment_method), class: 'payment_method' %></td>
          <% elsif current_market.is_consignment_market? && order.purchase_order? && order.undelivered_for_user?(current_user) %>
              <td><%= f.select :payment_method, options_for_select([["Purchase Order", "po"], ["Credit Card", "credit"], ["Cash", "cash"], ["Check", "check"]], @order.payment_method), class: 'payment_method' %></td>
          <% else %>
              <td><%= order.display_payment_method %></td>
          <% end %>
        </tr>
        <% if (order.payment_method == "invoice" || order.payment_method == "purchase order" || order.payment_method == "po" || order.payment_method == "check") %>
        <tr>
          <th scope="row"><%= order.sales_order? ? 'Payment Ref. #' : 'Supplier Inv. #' %></th>
          <% if current_market.is_consignment_market? %>
              <td>
                <%= f.text_field :payment_note, size: 4, value: order.payment_note %>
                <%= f.button raw("<i class='fa fa-check'>&nbsp;</i>").html_safe, class: "btn btn--primary btn--tiny" %>
              </td>
        <% else %>
              <td><%= order.payment_note %></td>
          <% end %>
        </tr>
        <% end %>
        <tr>
          <th scope="row">Delivery Status: </th>
          <td><%= order.delivery_status_for_user(current_user).titleize %></td>
        </tr>
        <% if order.sales_order? %>
        <tr>
          <th scope="row">Buyer Payment: </th>
          <td><%= order.buyer_payment_status.titleize %><%= order.buyer_payment_invoice_status %></td>
        </tr>
        <% end %>
        </tbody>
      </table>
      <% if order.payment_method=="purchase order" && !order.invoiced_at.nil? %>
          <button id="uninvoice_order" class="btn btn--small btn--primary" name="Uninvoice Order">Uninvoice Order</button>
      <% end %>
    </div>
  </div>
  <div class="row order-data">
    <br/><br/>
    <h2 class="pull-left">Items for Delivery</h2>
    <% if !current_user.buyer_only? && (order.delivery_status == 'pending' || order.delivery_status == 'partially delivered') %>
      <%= button_tag "Mark all delivered", class: 'pull-right btn btn--small btn--primary mobile-block', style: 'margin-left: 15px;', id: 'mark-all-delivered', type: 'button' %>
    <% end %>
    <% if
        (current_market.is_buysell_market? && current_user.can_manage_market?(order.market) && !order.undelivered_for_user?(current_user)) ||
        (current_market.is_consignment_market? && current_user.can_manage_market?(order.market) && (order.delivery_status == 'delivered' || order.delivery_status == 'partially delivered') && Inventory::Utils.consignment_can_undeliver?(order))
    %>
      <%= button_tag "Undo mark delivery", class: 'pull-right btn btn--small btn--primary mobile-block' , id: 'undo-delivery', type: 'button' %>
    <% end %>
    <div class="table-wrapper">
      <table class="current-sales-table odd order-table-1">
      <thead>
        <tr>
          <th>Product Name</th>
          <th>Quantity</th>
          <% if order.purchase_order? %>
          <th>Lot</th>
          <th>Delivery</th>
          <% end %>
          <% if current_market.is_buysell_market? %>
          <th>Product Code</th>
          <th>Price</th>
          <th>Total</th>
          <% elsif order.sales_order?%>
          <th>Lot</th>
          <th>Delivery</th>
          <th>Sale Price</th>
          <th>Net Price</th>
          <th>Total</th>
          <% end %>
          <th>Delivery Status</th>
          <% if current_market.is_buysell_market? %>
          <th>Buyer Payment</th>
          <% if !current_user.buyer_only? && policy(:all_supplier).index? %>
            <th>Seller Payment</th>
          <% end %>
          <% end %>
          <% if FeatureAccess.order_action_links?(user_order_context: user_order_context) %>
            <th></th>
          <% end %>
        </tr>
      </thead>
      <tbody>
        <%= f.fields_for :items do |item| %>
          <% user_order_item_context = UserOrderItemContext.build(user: current_user, order_item: item.object) %>
        <tr class="order-item-row">
          <td class="name">
            <span class="product-ordered"><%= item.object.name %></span> <br />
            <span class="seller-name">from <%= item.object.product.organization.name %></span>
          </td>
          <td class="quantity">
            <%# if (current_user.admin? || current_user.market_manager?) && item.object.delivery_status == 'pending' %>
            <% if (current_market.is_buysell_market? && FeatureAccess.edit_ordered_quantity?(user_order_item_context: user_order_item_context)) || (current_market.is_consignment_market? && item.object.delivery_status == 'pending') %>
              <%= item.text_field :quantity, :autocomplete => :off, value: Format.quantity_no_delimiter(item.object.quantity), class: 'quantity-ordered' %>
            <% else %>
              <span class="quantity-ordered-ro"><%= Format.quantity_no_delimiter(item.object.quantity) %></span>
            <% end %> <%= item.object.unit %> (Ordered)<br />

            <% if (current_market.is_buysell_market? && FeatureAccess.edit_delivered_quantity?(user_order_item_context: user_order_item_context)) || (current_market.is_consignment_market? && item.object.delivery_status == 'pending') %>
              <%= item.text_field :quantity_delivered, :autocomplete => :off, value: Format.quantity_no_delimiter(item.object.quantity_delivered), class: 'quantity-delivered' %>
              <% if current_market.is_consignment_market? && order.purchase_order? && item.object.delivery_status == 'pending' %>
              <%= item.select(:preferred_storage_location_id, options_for_select(StorageLocation.where("market_id = ?", current_market.id).map{|l| [l.name, l.id]}), {include_blank: false}) %>
              <% elsif current_market.is_consignment_market? && order.purchase_order? && (item.object.delivery_status != 'pending' && item.object.delivery_status != 'canceled') %>
              <%= item.hidden_field :preferred_storage_location_id, value: item.object.product.lots.last.storage_location_id %>
              <% end %>
            <% else %>
              <span class="quantity-delivered-ro"><%= Format.quantity_no_delimiter item.object.quantity_delivered %></span>
              <% if current_market.is_consignment_market? && order.purchase_order? && (item.object.delivery_status != 'pending' && item.object.delivery_status != 'canceled') %>
              <%= item.hidden_field :preferred_storage_location_id, value: item.object.product.lots.last.storage_location_id %>
              <% end %>
            <% end %> <%= item.object.unit %> (Delivered)<br />
          </td>

          <% if current_market.is_consignment_market? %>
            <td>
            <% if item.object.order.sales_order? %>
              <% lt = !item.object.po_lot_id.nil? ? Lot.find(item.object.po_lot_id) : nil %>
            <% else %>
              <% lt = item.object.product.lots.where("#{item.object.order.id} = split_part(lots.number,'-',1)::integer").last %>
            <% end %>
            <% if !lt.nil? && item.object.delivery_status == 'delivered' %>
              <span>
                  <%= "#{lt.number}" %><br/>
                  <%= "#{lt.storage_location.nil? ? '' : lt.storage_location.name}" %>
              </span>
            <% else %>
              -
            <% end %>
            </td>
            <td><%= !item.object.delivered_at.nil? ? item.object.delivered_at.strftime("%m/%d/%y") : '' %></td>
          <% end %>
          <% if current_market.is_buysell_market? %>
          <td>
            <% if item.object.product.code.present? %>
              <span><%= item.object.product.code %></span> <br />
            <% else %>
              -
            <% end %>
          </td>
          <td class="price"> <% if FeatureAccess.not_LE_market_manager?(user:current_user, market: current_market) && FeatureAccess.can_edit_order?(user: current_user, order: order) and order.payment_status == "unpaid" %>
           <%= link_to "#{number_to_currency item.object.unit_price}", "/admin/orders/#{order.id}/order_items/#{item.object.id}", class: 'edit-toggle' %><% else %> <%= number_to_currency item.object.unit_price %>
            <% end %>
          </td>
          <td class="total"><%= number_to_currency item.object.gross_total %></td>
          <% elsif order.sales_order?%>
          <td class="price">
            <%if order.payment_status == "unpaid" %>
                <%= link_to "#{number_to_currency item.object.unit_price}", "/admin/orders/#{order.id}/order_items/#{item.object.id}", class: 'edit-toggle' %><% else %> <%= number_to_currency item.object.unit_price %>
            <% end %>
          </td>
          <td class="price">
            <%if order.payment_status == "unpaid" %>
                <%= link_to "#{number_to_currency item.object.net_price}", "/admin/orders/#{order.id}/order_items/#{item.object.id}", class: 'edit-toggle' %><% else %> <%= number_to_currency item.object.net_price %>
            <% end %>
          </td>
          <td class="total"><%= number_to_currency item.object.gross_total %></td>
          <% end %>
          <td class="delivery-status">
            <%= item.hidden_field :delivery_status %>
            <%= item.object.delivery_status.titleize %>
          </td>
          <td class="delivered-at" style="display:none;"><% item.hidden_field :delivered_at %></td>
          <% if current_market.is_buysell_market? %>

          <td class="payment-status"><%= item.object.buyer_payment_status.titleize %></td>
          <% if !current_user.buyer_only? && policy(:all_supplier).index? %>
            <td class="seller-status"><%= item.object.seller_payment_status %></td>
          <% end %>
          <% end %>
          <% if FeatureAccess.order_action_links?(user_order_context: user_order_context) %>
            <td class="action-link">
              <% if FeatureAccess.delete_order_item?(user_order_item_context: user_order_item_context) %>
                <%= item.hidden_field :_destroy %>
                <%= link_to raw('<i class="fa fa-trash-o">&nbsp;</i>'), "#delete" %>
              <% end %>
            </td>
          <% end %>
        </tr>
        <% end %>
      </tbody>
      </table>
      <% if can_add_products_to_order?(order, user_order_context) && @show_add_items_form
          session[:current_delivery_id] = order.delivery.id
          session[:current_organization_id] = order.organization.id
          %>
          <div class="add-items-to-order" data-order-id="<%= order.id %>">
            <%= react_component('lo.ProductFilter', {
                deliveryDate: order.delivery.buyer_deliver_on,
                orderCutoff: order.delivery.cutoff_time,
                buyerInfo: order.organization.name,
                useTemplates: FeatureAccess.order_templates?(market: current_market),
                supplierId: nil,
                orderId: order.id
            }) %>
          <div style="height:600px; overflow-y: scroll">
            <%= react_component('lo.ProductCatalog', {
                baseUrl: "#{request.base_url}/api/v1/",
                cartUrl: cart_path,
                deliveryDate: order.delivery.buyer_deliver_on,
                orderCutoff: order.delivery.cutoff_time,
                buyerInfo: order.organization.name,
                limit: 10,
                useTemplates: FeatureAccess.order_templates?(market: current_market),
                supplierId: nil,
                orderId: order.id,
                purchaseOrder: order.order_type == 'purchase',
                salesOrder: order.order_type == 'sales',
                consignmentMarket: current_market.is_consignment_market?,
                currentSupplier: order.order_type == 'purchase' ? order.sellers[0].id : nil,
            }) %>
          </div>
        </div>
      <% end %>
    </div>

    <% if (FeatureAccess.order_action_links?(user_order_context: user_order_context) && current_market.is_buysell_market?) || (current_market.is_consignment_market? && (order.delivery_status == 'pending' || order.delivery_status == 'partially delivered')) %>
      <br/><br/>
      <%= f.submit @show_add_items_form ? "Add items and Update quantities" : "Update quantities", id: 'submit-add-items', class: 'pull-right btn btn--small mobile-block' %>
    <% elsif FeatureAccess.order_action_links?(user_order_context: user_order_context) && current_market.is_consignment_market? && @show_add_items_form %>
         <br/><br/>
         <%= f.submit "Add items", id: 'submit-add-items', class: 'pull-right btn btn--small mobile-block' %>
    <% end %>
    <% if can_add_products_to_order?(order, user_order_context) && !@show_add_items_form %>
      <%= f.submit "Add Items", class: 'pull-right btn btn--small mobile-block' %>
    <% end %>
  </div>
  <br/><br/>
  <% if current_market.is_consignment_market? && order.sales_order? %>
      <div class="delivery_sig">
        <br/>
        <h2>Delivery Signature:</h2>
        <% if (order.signature_data.nil? || order.signature_data.empty?) && order.delivery_status == "pending" %>
            <div id="signature" class="signature"></div>
            <button id="save_sig" name="Save Signature">Save Signature</button>
            <button id="clear_sig" name="Clear Signature">Clear Signature</button>
        <% elsif !order.signature_data.nil? && !order.signature_data.empty? %>
            <div style="padding: 5px">
              <%= JSignatureBase30.new(order.signature_data).to_svg.html_safe %>
            </div>
        <% end %>
        <%= f.hidden_field :signature_data %>
      </div>
  <% end %>
  <% if order.purchase_order? %>
    <%= render "shared/po_trans", {order: order, f: f} %>
  <% end %>

  <% if order.sales_order? && current_market.is_consignment_market? %>
    <%= render "shared/so_trans", {order: order, f: f} %>
  <% end %>

  <% if !current_user.buyer_only? && FeatureAccess.not_LE_market_manager?(user: current_user, market: current_market) && current_market.is_buysell_market? %>
  <div class="order-totals">
    <div class="table-wrapper">
      <h2>Order Totals</h2>
      <table class="current-sales-table odd">
        <thead>
          <tr>
            <th>Product Total</th>
            <% if current_user.can_manage_market?(order.market) %>
            <th>Discount (by Market)</th>
            <th>Discount (by Seller)</th>
            <th><%= order.delivery.delivery_schedule.fee_label %></th>
            <% elsif current_user.seller? %>
            <th>Discount</th>
            <% end %>
            <th>Market Fee</th>
            <th>Transaction Fee</th>
            <th>Payment Processing Fee</th>
            <th>Net Sale</th>
          </tr>
        </thead>
        <tbody>
          <tr class="order-summary-row">
            <td class="gross-total"><%= number_to_currency order.gross_total %></td>
            <% if current_user.can_manage_market?(order.market) %>
              <td class="discount-market"><%= number_to_currency order.discount_market %></td>
              <td class="discount-seller"><%= number_to_currency order.discount_seller %></td>
              <td class="delivery-fees"><%= number_to_currency order.delivery_fees %></td>
            <% elsif current_user.seller? %>
              <td class="discount"><%= number_to_currency order.discount_seller %></td>
            <% end %>
            <td class="market-fees"><%= number_to_currency order.market_fees %></td>
            <td class="transaction-fees"><%= number_to_currency order.transaction_fees %></td>
            <td class="payment-processing"><%= number_to_currency order.payment_fees %></td>
            <td class="net-sale"><%= number_to_currency order.net_total %></td>
          </tr>
        </tbody>
      </table>
    </div>
  </div>
  <% end %>
  <% if current_user.can_manage_market?(order.market) %>
    <div class="order-notes">
      <%= f.label :notes %>
      <%= f.text_area :notes, rows: 5 %>
      <%= f.submit "Save Notes", class: 'btn btn--small mobile-block' %>
    </div>
  <% end %>
  <% if current_user.can_manage_market?(order.market) || current_user.is_localeyes_buyer? %>
  <br/><br/>
  <div>
    <div class="table-wrapper">
      <h2>Order History</h2>

      <table class="order-history">
        <thead>
          <tr>
            <th>When</th>
            <th>Changes</th>
            <th>Who</th>
          </tr>
        </thead>
        <tbody>
          <% OrderHistoryPresenter.new(order.id).each_activity do |activity| %>
            <tr>
              <td><%= activity.when %></td>
              <td>
                <% activity.actions.each do |action| %>
                  <p><%= action %></p>
                <% end %>
              </td>
              <td><%= activity.who %></td>
            </tr>
          <% end %>
        </tbody>
      </table>
    </div>
  </div>
  <% end %>

</div>
<% end %>

<div> <br>
  <% if !current_user.buyer_only? # TODO move this logic? Order view... %>
    <% if !current_user.can_manage_market?(current_market) %>
     <h2>Delivery Note</h2>
      <% DeliveryNote.where(order_id:order.id,supplier_org:current_organization).visible.each do |n| %>
        <%= n.note %><br>
      <% end %>
    <% else  # all of them - admin powers %>
      <h2>Delivery Notes</h2>
        <% DeliveryNote.where(order_id:order.id).visible.each do |n| %>
          <strong> For <%= Organization.where(id:n.supplier_org).first.name %>:</strong>
          <%= n.note %> <br><br>
        <% end %>
    <% end %>
  <% end %>
</div>

<% if FeatureAccess.order_printables?(user: current_user, order: order) && current_market.is_buysell_market? %>
  <%= render :partial=>"table_tents_and_posters/ad", locals: { order: order } %>
<% end %>

<% if FeatureAccess.can_edit_order?(user: current_user, order: order) && current_market.is_buysell_market? %>
  <%= react_component('lo.ModifyCreditModal', {
    baseUrl: "#{request.base_url}/api/v1/",
    credit: order.credit,
    grossTotal: order.gross_total.to_f,
    amountTypes: Credit::AMOUNT_TYPES,
    payerTypes: Credit::PAYER_TYPES,
    applyTo: Credit::APPLY_TO_TYPES,
    sellers: order.sellers,
    orderId: order.id
  }) %>
<% end %>